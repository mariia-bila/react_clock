{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","toLocaleTimeString","timerId","this","setInterval","setState","console","log","prevName","name","props","clearInterval","React","Component","App","isClockVisible","clockName","className","type","onClick","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"uMAUaA,G,MAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,QAA+B,KALjC,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,IAAML,EAAa,IAAIC,KAEvB,EAAKK,SACH,CACEN,MAAM,IAAIC,MAAOC,uBAIrBK,QAAQC,IAAIR,EAAKE,wBAChB,OAlBP,gCAqBE,YAA8C,IAAnBO,EAAkB,EAAxBC,KACfN,KAAKO,MAAMD,OAASD,GAEtBF,QAAQC,IAAR,qCAA0CC,EAA1C,eAAyDL,KAAKO,MAAMD,SAxB1E,kCA4BE,WACMN,KAAKD,SACPS,cAAcR,KAAKD,WA9BzB,oBAkCE,WACE,OACEC,KAAKL,MAAMC,SApCjB,GAA2Ba,IAAMC,Y,OCD3BC,E,4MACJhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAW,G,4CAGb,WAAU,IAAD,OACP,OACE,qCACGb,KAAKL,MAAMiB,eACV,sBAAKE,UAAU,MAAf,UACE,6BAAKd,KAAKL,MAAMkB,YAChB,8CAEG,IACD,cAAC,EAAD,CAAOP,KAAMN,KAAKL,MAAMkB,kBAI1B,KAEJ,wBACEE,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKd,SAAS,CAAEU,gBAAgB,KAHjD,wBAQA,wBACEG,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKd,SAAS,CAAEU,gBAAgB,KAHjD,wBAQA,wBACEG,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKd,SAAS,CAAEW,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,aAH5D,6B,GArCUV,IAAMC,WAiDTC,ICvDfS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e6f1448c.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  date: string\n};\n\ntype Props = {\n  name: number\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date().toLocaleTimeString(),\n  };\n\n  timerId: NodeJS.Timer | null = null;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      const date: Date = new Date();\n\n      this.setState(\n        {\n          date: new Date().toLocaleTimeString(),\n        },\n      );\n      // eslint-disable-next-line\n      console.log(date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate({ name: prevName }:Props) {\n    if (this.props.name !== prevName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevName} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      this.state.date\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  isClockVisible: boolean\n  clockName: number\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  render() {\n    return (\n      <>\n        {this.state.isClockVisible ? (\n          <div className=\"App\">\n            <h1>{this.state.clockName}</h1>\n            <p>\n              Current time:\n              {' '}\n              <Clock name={this.state.clockName} />\n            </p>\n          </div>\n        )\n          : null}\n\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => this.setState({ isClockVisible: true })}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => this.setState({ isClockVisible: false })}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => this.setState({ clockName: Math.floor(Math.random() * 100) })}\n        >\n          Set name\n        </button>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}